Всегда следи за границами начальных значений!
1. Если по условию n натуральное
    range(1, 10_000)
2. Если по условию n неотрицательное
    range(0, 10_000)
3. Если по условию n > 10
    range(11, 10_000)
4. Если по условию n просто число
    range(-10_000, 10_000)
==============================================================

Функция для перевода (2 ≤sys ≤ 36)
from string import digits, ascii_lowercase
def convert(num, sys):
   alph = digits + ascii_lowercase
   res = ''
   while num:
       res += alph[num % sys]
       num //= sys
   return res[::-1]
================================================================

Стандартные функции:
1. Представление числа N в двоичной системе
	bin(N)[2:]
2. Представление числа N в восьмеричной системе
	oct(N)[2:]
3. Представление числа N в шестнадцатеричной системе
	hex(N)[2:]
4. Перевод числа N (в формате строки) в 10 из sys системы счисления
	int(N, sys)
===================================================================
1. Сумма цифр строки R в двоичной системе
    R.count('1')
2. Сумма цифр строки R в любой системе
    sum(map(int, R))
3. Количество четных цифр
    r = hex(15623)[2:]
    sum([1 for i in r if int(i, 16) % 2 == 0])

Срезы:
R = R[:len(R)//2] + 'что-то' + R[len(R)//2:] – вставка в середину строки
R = R + R[-3:] – приписать последние три символа в конец строки