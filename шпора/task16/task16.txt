Полезные функции:
1. Увеличение глубины рекурсии, если выдает ошибку maximum recursion depth
  from sys import setrecursionlimit
  setrecursionlimit(10_000)
2. Кэширование промежуточных результатов, если программа слишком долго думает
  from functools import lru_cache
  @lru_cache(None)

================================================================

Решение вручную:
Если в вопросе задания просят найти разность двух функций или выполнить деление одной функции на другую,
следует обратить внимание на числовые значения, которые передаются в функцию.
Если число расположены близко друг к другу на числовой прямой, следует обратить внимание,
как изменяется число при рекурсивном вызове. Если функция вызывается рекурсивно единожды и
шаг рекурсии позволит через несколько действий приравнять значения, то расписываем функцию на несколько действий,
пока не произойдет вычитание или деление.

Пример:
Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:
F(n)=1, при n≤7,
F(n)=n+2+F(n−1), если n>7
Чему равно значение выражения F(2024)−F(2020)?

Решение:
1. Числа 2024 и 2020 отличаются всего на 4 и расположены достаточно близко на числовой прямой
2. Функция вызывается рекурсивно единожды F(n)=n+2+F(n−1) и изменяет число при вызове на единицу
3. С действием n - 1 число 2024 превратится в число 2022 за 4 шага. Распишем 4 шага рекурсии
4. F(2024) = 2024 + 2 + F(2023) = 2024 + 2 + 2023 + 2 + F(2022) = 2024 + 2 + 2023 + 2 + 2022 + 2 + F(2021) =
2024 + 2 + 2023 + 2 + 2022 + 2 + 2021 + 2 + F(2020)
5. Мы дошли до F(2020), подставим результат работы функции F(2024) в исходное выражение
F(2024) - F(2020) = 2024 + 2 + 2023 + 2 + 2022 + 2 + 2021 + 2 + F(2020) - F(2020) =
2024 + 2 + 2023 + 2 + 2022 + 2 + 2021 + 2 = 8098